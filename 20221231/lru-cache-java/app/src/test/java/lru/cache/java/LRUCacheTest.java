/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package lru.cache.java;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;

import static org.assertj.core.api.Assertions.assertThat;

class LRUCacheTest {
    private LRUCache cache;

    @BeforeEach
    void setup() {
        cache = new LRUCache(10);
    }

    private int fillUpCache() {
        int firstKey = 50;

        int anyKey = firstKey;
        int anyValue = 0;
        while (!cache.isFull()) {
            cache.put(anyKey, anyValue);
            anyKey += 1;
        }

        return firstKey;
    }

    @Test
    void putEvictLeastUsed() {
        int NEW_KEY = 10000;
        int ANY_VALUE = 10000;

        int oldestKey = fillUpCache();

        cache.put(NEW_KEY, ANY_VALUE);

        assertThat(cache.get(oldestKey)).isEqualTo(-1);
    }

    @Test
    void getUpdatePriority() {
        int NEW_KEY = 10000;
        int ANY_VALUE = 10000;

        int oldestKey = fillUpCache();

        cache.get(oldestKey);

        cache.put(NEW_KEY, ANY_VALUE);

        assertThat(cache.get(oldestKey)).isNotEqualTo(-1);
    }
}
