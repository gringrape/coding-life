/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package tdd;

import org.junit.jupiter.api.Test;

import java.util.stream.DoubleStream;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNotEquals;

class MoneyTest {
    @Test
    void testMultiplication() {
        Expression five = Money.dollar(5);
        assertEquals(Money.dollar(10), five.times(2));
        assertEquals(Money.dollar(15), five.times(3));
    }

    @Test
    void testEquality() {
        assertEquals(Money.dollar(5), Money.dollar(5));
        assertNotEquals(Money.dollar(5), Money.dollar(6));
        assertNotEquals(Money.franc(5), Money.dollar(5));
    }

    @Test
    void testCurrency() {
        assertEquals("USD", Money.dollar(1).currency());
        assertEquals("CHF", Money.franc(1).currency());
    }

    @Test
    void testSimpleAddition() {
        Money five = Money.dollar(5);
        Expression sum = five.plus(five);
        Bank bank = new Bank();
        Money reduced = bank.reduce(sum, "USD");
        assertEquals(Money.dollar(10), reduced);
    }

    @Test
    void testPlusReturnsSum() {
        Money five = Money.dollar(5);
        Expression expression = five.plus(five);
        Sum sum = (Sum) expression;
        assertEquals(Money.dollar(5), sum.augend);
        assertEquals(Money.dollar(5), sum.addend);
    }

    @Test
    void testReduceSum() {
        Bank bank = new Bank();
        Sum sum = new Sum(
                Money.dollar(3), Money.dollar(4)
        );
        Money reduced = bank.reduce(sum, "USD");
        assertEquals(Money.dollar(7), reduced);
    }

    @Test
    void testReduceMoney() {
        Bank bank = new Bank();
        Money reduced = bank.reduce(Money.dollar(1), "USD"); // USD -> USD
        assertEquals(Money.dollar(1), reduced);
    }

    @Test
    void testExchange() {
        Bank bank = new Bank();
        bank.addRate("CHF", "USD", 2);
        Money reduced = bank.reduce(Money.franc(2), "USD");
        assertEquals(Money.dollar(1), reduced);
    }

    @Test
    void testIdentityExchange() {
        Bank bank = new Bank();
        Money reduced = bank.reduce(Money.dollar(1), "USD");
        assertEquals(Money.dollar(1), reduced);
    }

    @Test
    void testDifferentCurrencyAddition() {
        Expression fiveBucks = Money.dollar(5);
        Expression tenFrancs = Money.franc(10);
        Expression sum = tenFrancs.plus(fiveBucks);
        Bank bank = new Bank();
        bank.addRate("CHF", "USD", 2);
        Money reduced = bank.reduce(sum, "USD");
        assertEquals(Money.dollar(10), reduced);
    }
}
